"use strict";(self.webpackChunkrooch_network=self.webpackChunkrooch_network||[]).push([[547],{4137:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return d}});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=o.createContext({}),l=function(e){var t=o.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},s=function(e){var t=l(e.components);return o.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),f=l(r),d=n,m=f["".concat(u,".").concat(d)]||f[d]||p[d]||a;return r?o.createElement(m,c(c({ref:t},s),{},{components:r})):o.createElement(m,c({ref:t},s))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,c=new Array(a);c[0]=f;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:n,c[1]=i;for(var l=2;l<a;l++)c[l]=r[l];return o.createElement.apply(null,c)}return o.createElement.apply(null,r)}f.displayName="MDXCreateElement"},6566:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return p},frontMatter:function(){return a},metadata:function(){return i},toc:function(){return l}});var o=r(3117),n=(r(7294),r(4137));const a={},c="Fraud Proofs",i={unversionedId:"technology/fraud-proofs",id:"technology/fraud-proofs",title:"Fraud Proofs",description:"Fraud Proof is the most critical part of the Layer2 project to ensure security. Only when fraud-proof is implemented, and fraud on Layer2 can be punished at the arbitration layer, we can guarantee the security of users' assets.",source:"@site/docs/04-technology/02-fraud-proofs.md",sourceDirName:"04-technology",slug:"/technology/fraud-proofs",permalink:"/docs/technology/fraud-proofs",draft:!1,editUrl:"https://github.com/rooch-network/rooch-network.github.io/edit/main/docs/04-technology/02-fraud-proofs.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Multi-chain Settlement protocol",permalink:"/docs/technology/modular-blockchain-architecture/multi-chain-settlement-protocol"},next:{title:"Transaction Accumulator Proofs",permalink:"/docs/technology/transaction-accumulator-proofs"}},u={},l=[{value:"OMO",id:"omo",level:2}],s={toc:l};function p(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,o.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"fraud-proofs"},"Fraud Proofs"),(0,n.kt)("p",null,"Fraud Proof is the most critical part of the Layer2 project to ensure security. Only when fraud-proof is implemented, and fraud on Layer2 can be punished at the arbitration layer, we can guarantee the security of users' assets."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"modular",src:r(353).Z,width:"506",height:"521"})),(0,n.kt)("h2",{id:"omo"},"OMO"),(0,n.kt)("p",null,"OMO is a general bytecode emulator with per-step state proof:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Design for multi-chain VM execution: rich implementation of instructions and system calls"),(0,n.kt)("li",{parentName:"ol"},"CPU & OS interface for multi-platform supports."),(0,n.kt)("li",{parentName:"ol"},"Clear and accurate per-step state proof general solution: instruction-level process state ")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/starcoinorg/omo/blob/main/docs/guidelines.md"},"learn more")))}p.isMDXComponent=!0},353:function(e,t,r){t.Z=r.p+"assets/images/rooch-omo-50d659ffdd3c6dc7d0ce214221792776.svg"}}]);